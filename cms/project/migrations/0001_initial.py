# Generated by Django 5.1 on 2024-10-16 15:29

import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import project.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "project_type",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Project Type",
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "owner",
                    models.IntegerField(default=24, verbose_name="Project Owner"),
                ),
                (
                    "approved",
                    models.BooleanField(
                        default=False, verbose_name="Approved by an Adviser"
                    ),
                ),
                (
                    "proposal_defense",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Preliminary Defense",
                    ),
                ),
                (
                    "design_defense",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Design Defense",
                    ),
                ),
                (
                    "preliminary_defense",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Preliminary Defense",
                    ),
                ),
                (
                    "final_defense",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Final Defense ",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project_Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "group_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=120,
                        null=True,
                        verbose_name="Group Name",
                    ),
                ),
                (
                    "approved",
                    models.BooleanField(
                        default=False, verbose_name="Approved by an Adviser"
                    ),
                ),
                (
                    "owner",
                    models.IntegerField(
                        default=24, verbose_name="Project Group Creator"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("COORDINATOR", "Coordinator"),
                            ("FACULTY", "Faculty"),
                            ("STUDENT", "Student"),
                        ],
                        default="STUDENT",
                        max_length=50,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, default="", max_length=254, unique=True
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255)),
                ("last_name", models.CharField(blank=True, max_length=255)),
                ("username", models.CharField(blank=True, max_length=255)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Contact Phone",
                    ),
                ),
                (
                    "course",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Course"
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        default="static/images/default_profile_pic.jpg",
                        null=True,
                        upload_to="images/",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "eligible",
                    models.BooleanField(
                        default=False, verbose_name="Eligible as Student"
                    ),
                ),
                (
                    "eligility_deficiencies",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        verbose_name="Eligibility Deficiencies",
                    ),
                ),
                (
                    "adviser_eligible",
                    models.BooleanField(
                        default=False, verbose_name="Eligible as Adviser"
                    ),
                ),
                (
                    "panel_eligible",
                    models.BooleanField(
                        default=False, verbose_name="Eligible as Panelist"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", project.models.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Coordinator",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.appuser",),
            managers=[
                ("coordinator", django.db.models.manager.Manager()),
                ("objects", project.models.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Faculty",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.appuser",),
            managers=[
                ("faculty", django.db.models.manager.Manager()),
                ("objects", project.models.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.appuser",),
            managers=[
                ("student", django.db.models.manager.Manager()),
                ("objects", project.models.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CoordinatorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("coordinator_id", models.IntegerField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FacultyProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("faculty_id", models.IntegerField(blank=True, null=True)),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True, verbose_name=project.models.Faculty
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ApprovedProject",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.project",),
            managers=[
                ("approved_project", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="proponents",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="project.project_group",
            ),
        ),
        migrations.CreateModel(
            name="ApprovedProjectGroup",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.project_group",),
            managers=[
                ("approved_project_group", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_id", models.IntegerField(blank=True, null=True)),
                (
                    "date_modified",
                    models.DateTimeField(
                        auto_now=True, verbose_name=project.models.Student
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project_group",
            name="adviser",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="group_adviser",
                to="project.faculty",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="panel",
            field=models.ManyToManyField(
                blank=True, related_name="project_panel", to="project.faculty"
            ),
        ),
        migrations.CreateModel(
            name="Approved_Adviser",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.faculty",),
            managers=[
                ("approved_adviser", django.db.models.manager.Manager()),
                ("objects", project.models.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Approved_panel",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("project.faculty",),
            managers=[
                ("approved_panel", django.db.models.manager.Manager()),
                ("objects", project.models.AppUserManager()),
            ],
        ),
        migrations.AddField(
            model_name="project_group",
            name="proponents",
            field=models.ManyToManyField(
                blank=True, related_name="project_proponents", to="project.student"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="adviser",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="project.approved_adviser",
            ),
        ),
        migrations.CreateModel(
            name="Defense_Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "owner",
                    models.IntegerField(
                        blank=True, default=24, verbose_name="Application Owner"
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("abstract", models.TextField(blank=True, null=True)),
                (
                    "document",
                    models.FileField(blank=True, null=True, upload_to="submissions/"),
                ),
                ("submission_date", models.DateTimeField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project.approvedproject",
                    ),
                ),
                (
                    "project_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project.approvedprojectgroup",
                    ),
                ),
                (
                    "adviser",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="application_adviser",
                        to="project.approved_adviser",
                    ),
                ),
                (
                    "panel",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="application_panel",
                        to="project.approved_panel",
                    ),
                ),
            ],
        ),
    ]
